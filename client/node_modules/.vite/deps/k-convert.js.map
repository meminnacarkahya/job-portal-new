{
  "version": 3,
  "sources": ["../../k-convert/index.js"],
  "sourcesContent": ["\"use strict\";\n\nmodule.exports = {\n    /**\n     * Convert a float number to k-metric number\n     * @param {number} The number to be converted\n     * @return {numberConverted} The k-metric string of the number\n     */\n    convertTo: number => {\n        if (number < 1000) return number.toString();\n\t   \tlet numberConverted = \"\",\n            times = 0,\n            aux = Math.trunc(number / 100) * 100;\n        while (aux / 1000 >= 1) {\n            aux /= 1000;\n            times++;\n        }\n        numberConverted = `${aux}`;\n        for (let i = 0; i < times; i++) {\n            numberConverted = numberConverted.concat(\"k\");\n        }\n        return numberConverted;\n    },\n    /**\n     * Convert a k-metric string number to a float number\n     * @param {string} The k-metric string to be converted\n     * @return {aux} The float number converted\n     */\n    convertFrom: string => {\n        let aux;\n        for (let i = 0; i < string.length; i++)\n            aux = string.toLowerCase().replace(\"k\", \"\");\n        aux = parseFloat(aux);\n        for (let i = 0; i < string.length; i++) {\n            if (string.charAt(i).toLowerCase() == \"k\") {\n                aux *= 1000;\n            }\n        }\n        return aux;\n    }\n};\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMb,WAAW,YAAU;AACjB,YAAI,SAAS,IAAM,QAAO,OAAO,SAAS;AAC7C,YAAI,kBAAkB,IACf,QAAQ,GACR,MAAM,KAAK,MAAM,SAAS,GAAG,IAAI;AACrC,eAAO,MAAM,OAAQ,GAAG;AACpB,iBAAO;AACP;AAAA,QACJ;AACA,0BAAkB,GAAG,GAAG;AACxB,iBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC5B,4BAAkB,gBAAgB,OAAO,GAAG;AAAA,QAChD;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,aAAa,YAAU;AACnB,YAAI;AACJ,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ;AAC/B,gBAAM,OAAO,YAAY,EAAE,QAAQ,KAAK,EAAE;AAC9C,cAAM,WAAW,GAAG;AACpB,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,cAAI,OAAO,OAAO,CAAC,EAAE,YAAY,KAAK,KAAK;AACvC,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;",
  "names": []
}
